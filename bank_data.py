# -*- coding: utf-8 -*-
"""bank_data.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hxFQ3r77K03a2thCDbMu3zirdZKNxFkS
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
import pickle

data = pd.read_excel("Bank_Personal_Loan_Modelling.xlsx")

data.shape

data.head()

data.tail()

data.columns

data.dtypes

data.isna().sum()

data["Personal Loan"].value_counts()

data.set_index(data["ID"],inplace=True)

data=data.drop(["ID","ZIP Code"], axis=1)

data.head()

data['Personal Loan']=data['Personal Loan'].astype('category')

y=data["Personal Loan"]
X=data.drop('Personal Loan', axis=1)

X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.25, random_state=123)

X_train.shape

X_test.shape

y_train.shape

y_test.shape

logit = LogisticRegression()

logit.fit(X_train,y_train)

y_train_pred  = logit.predict(X_train)
y_test_pred = logit.predict(X_test)

from sklearn.metrics import accuracy_score

accuracy_score(y_train,y_train_pred)

accuracy_score(y_test,y_test_pred)

dtc = DecisionTreeClassifier()

dtc.fit(X_train,y_train)

y_train_pred_dtc = dtc.predict(X_train)
y_test_pred_dtc = dtc.predict(X_test)

accuracy_score(y_train,y_train_pred_dtc)

accuracy_score(y_test,y_test_pred_dtc)

pickle.dump(logit, open('model.pkl','wb'))
model = pickle.load(open('model.pkl','rb'))

